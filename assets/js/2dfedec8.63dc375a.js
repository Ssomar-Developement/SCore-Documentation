"use strict";(self.webpackChunkscore_documentation=self.webpackChunkscore_documentation||[]).push([[4398],{8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>d});var a=n(6540);const i={},r=a.createContext(i);function l(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(r.Provider,{value:t},e.children)}},8500:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>s});const a=JSON.parse('{"id":"executableblocks/registered_events/event_EB_break/itemsadder","title":"ItemsAdderEvents","description":"Class File: com.ssomar.executableblocks.events.mechanics.ItemsAdderEvents.java","source":"@site/docs/executableblocks/registered_events/event_EB_break/itemsadder.md","sourceDirName":"executableblocks/registered_events/event_EB_break","slug":"/executableblocks/registered_events/event_EB_break/itemsadder","permalink":"/SCore-Documentation/docs/executableblocks/registered_events/event_EB_break/itemsadder","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/executableblocks/registered_events/event_EB_break/itemsadder.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"ExecutableBlocks","previous":{"title":"Block Breaks","permalink":"/SCore-Documentation/docs/category/block-breaks"},"next":{"title":"Block Below EB Break","permalink":"/SCore-Documentation/docs/executableblocks/registered_events/event_EB_break/block-below-eb-break"}}');var i=n(4848),r=n(8453);const l={sidebar_position:1},d="ItemsAdderEvents",o={},s=[{value:"onEntityDamageByEntityEvent(EntityDamageByEntityEvent e)",id:"onentitydamagebyentityevententitydamagebyentityevent-e",level:2},{value:"onPlayerInteractEntityEvent(PlayerInteractAtEntityEvent e)",id:"onplayerinteractentityeventplayerinteractatentityevent-e",level:2},{value:"Get Entity details",id:"get-entity-details",level:3},{value:"IF target entity is not ArmorStand or damager is not Player, return;",id:"if-target-entity-is-not-armorstand-or-damager-is-not-player-return",level:3},{value:"Get Player, Block and Location data",id:"get-player-block-and-location-data",level:3},{value:"Get Optional Placed ExecutableBlock",id:"get-optional-placed-executableblock",level:3},{value:"If placed ExecutableBlock is not present, return;",id:"if-placed-executableblock-is-not-present-return",level:4},{value:"Finally, get the details of ExecutableBlockPlaced and ExecutableBlock data",id:"finally-get-the-details-of-executableblockplaced-and-executableblock-data",level:3},{value:"If the damager of the EB-ItemsAdder doesn&#39;t have permission, cancel the event and return",id:"if-the-damager-of-the-eb-itemsadder-doesnt-have-permission-cancel-the-event-and-return",level:4},{value:"If ExecutableItems is installed and the EB-ItemsAdder has entries in onlyBreakableWithEI:",id:"if-executableitems-is-installed-and-the-eb-itemsadder-has-entries-in-onlybreakablewithei",level:3},{value:"Check if the item in hand is AIR, start checking the item in offhand instead",id:"check-if-the-item-in-hand-is-air-start-checking-the-item-in-offhand-instead",level:4},{value:"If the item in the checked hand is still AIR or the held item is not in the list of ei that can be used to break the EB-ItemsAdder block, cancel the event and return;",id:"if-the-item-in-the-checked-hand-is-still-air-or-the-held-item-is-not-in-the-list-of-ei-that-can-be-used-to-break-the-eb-itemsadder-block-cancel-the-event-and-return",level:4},{value:"If the damaged EB-ItemsAdder really is not from ItemsAdder or ExecutableItems, return;",id:"if-the-damaged-eb-itemsadder-really-is-not-from-itemsadder-or-executableitems-return",level:3},{value:"Get Information about PLAYER_LEFT_CLICK_ON event",id:"get-information-about-player_left_click_on-event",level:3},{value:"If the event is cancelled, return",id:"if-the-event-is-cancelled-return",level:4},{value:"Get Information about PLAYER_ALL_CLICK_ON event",id:"get-information-about-player_all_click_on-event",level:3},{value:"If the event is cancelled, return",id:"if-the-event-is-cancelled-return-1",level:4},{value:"Run eBP.remove() to remove this specific ExecutableBlock from the records.",id:"run-ebpremove-to-remove-this-specific-executableblock-from-the-records",level:3}];function c(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"itemsadderevents",children:"ItemsAdderEvents"})}),"\n",(0,i.jsxs)(t.p,{children:["Class File: ",(0,i.jsx)(t.code,{children:"com.ssomar.executableblocks.events.mechanics.ItemsAdderEvents.java"})]}),"\n",(0,i.jsx)(t.h2,{id:"onentitydamagebyentityevententitydamagebyentityevent-e",children:"onEntityDamageByEntityEvent(EntityDamageByEntityEvent e)"}),"\n",(0,i.jsx)(t.p,{children:"WIP"}),"\n",(0,i.jsx)(t.h2,{id:"onplayerinteractentityeventplayerinteractatentityevent-e",children:"onPlayerInteractEntityEvent(PlayerInteractAtEntityEvent e)"}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["This is the event that gets triggered when breaking an ItemsAdder furniture. For blocks, find methods that uses ",(0,i.jsx)(t.code,{children:"BlockBreakEvent"})]})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"@EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)"})}),"\n",(0,i.jsx)(t.h3,{id:"get-entity-details",children:"Get Entity details"}),"\n",(0,i.jsx)(t.h3,{id:"if-target-entity-is-not-armorstand-or-damager-is-not-player-return",children:"IF target entity is not ArmorStand or damager is not Player, return;"}),"\n",(0,i.jsx)(t.h3,{id:"get-player-block-and-location-data",children:"Get Player, Block and Location data"}),"\n",(0,i.jsx)(t.h3,{id:"get-optional-placed-executableblock",children:"Get Optional Placed ExecutableBlock"}),"\n",(0,i.jsx)(t.h4,{id:"if-placed-executableblock-is-not-present-return",children:"If placed ExecutableBlock is not present, return;"}),"\n",(0,i.jsx)(t.h3,{id:"finally-get-the-details-of-executableblockplaced-and-executableblock-data",children:"Finally, get the details of ExecutableBlockPlaced and ExecutableBlock data"}),"\n",(0,i.jsx)(t.h4,{id:"if-the-damager-of-the-eb-itemsadder-doesnt-have-permission-cancel-the-event-and-return",children:"If the damager of the EB-ItemsAdder doesn't have permission, cancel the event and return"}),"\n",(0,i.jsx)(t.h3,{id:"if-executableitems-is-installed-and-the-eb-itemsadder-has-entries-in-onlybreakablewithei",children:"If ExecutableItems is installed and the EB-ItemsAdder has entries in onlyBreakableWithEI:"}),"\n",(0,i.jsx)(t.h4,{id:"check-if-the-item-in-hand-is-air-start-checking-the-item-in-offhand-instead",children:"Check if the item in hand is AIR, start checking the item in offhand instead"}),"\n",(0,i.jsx)(t.h4,{id:"if-the-item-in-the-checked-hand-is-still-air-or-the-held-item-is-not-in-the-list-of-ei-that-can-be-used-to-break-the-eb-itemsadder-block-cancel-the-event-and-return",children:"If the item in the checked hand is still AIR or the held item is not in the list of ei that can be used to break the EB-ItemsAdder block, cancel the event and return;"}),"\n",(0,i.jsx)(t.h3,{id:"if-the-damaged-eb-itemsadder-really-is-not-from-itemsadder-or-executableitems-return",children:"If the damaged EB-ItemsAdder really is not from ItemsAdder or ExecutableItems, return;"}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["The reason why ExecutableItems is here is because there is an edge case where someone will hold an ItemsAdder furniture and run ",(0,i.jsx)(t.code,{children:"/ei create"})," then create an ExecutableBlock by importing from ExecutableItems, which causes the plugin to have some lapse in judgement."]})}),"\n",(0,i.jsx)(t.h3,{id:"get-information-about-player_left_click_on-event",children:"Get Information about PLAYER_LEFT_CLICK_ON event"}),"\n",(0,i.jsx)(t.h4,{id:"if-the-event-is-cancelled-return",children:"If the event is cancelled, return"}),"\n",(0,i.jsx)(t.h3,{id:"get-information-about-player_all_click_on-event",children:"Get Information about PLAYER_ALL_CLICK_ON event"}),"\n",(0,i.jsx)(t.h4,{id:"if-the-event-is-cancelled-return-1",children:"If the event is cancelled, return"}),"\n",(0,i.jsx)(t.admonition,{type:"warning",children:(0,i.jsx)(t.p,{children:"EventInfo class lacks documentation, so no detailed explanation could be provided for now"})}),"\n",(0,i.jsx)(t.h3,{id:"run-ebpremove-to-remove-this-specific-executableblock-from-the-records",children:"Run eBP.remove() to remove this specific ExecutableBlock from the records."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"You can check the remove() method of ExecutableBlockPlaced and removeExecutableBlockPlaced() method of ExecutableBlocksPlacedManager for detailed information but the summary is that it unregisters the ExecutableBlock from that specific x,y,z,world location"}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);