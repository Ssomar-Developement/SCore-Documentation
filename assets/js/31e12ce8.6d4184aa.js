"use strict";(self.webpackChunkscore_documentation=self.webpackChunkscore_documentation||[]).push([[339],{8453:(e,n,a)=>{a.d(n,{R:()=>d,x:()=>i});var o=a(6540);const t={},r=o.createContext(t);function d(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),o.createElement(r.Provider,{value:n},e.children)}},9761:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"dependency_management","title":"Dependency Management","description":"Add an enum of the api of your choice","source":"@site/docs/dependency_management.md","sourceDirName":".","slug":"/dependency_management","permalink":"/SCore-Documentation/docs/dependency_management","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dependency_management.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Tutorial Intro","permalink":"/SCore-Documentation/docs/intro"},"next":{"title":"Feature Parent Interface","permalink":"/SCore-Documentation/docs/category/feature-parent-interface"}}');var t=a(4848),r=a(8453);const d={sidebar_position:2},i="Dependency Management",c={},s=[{value:"Add an enum of the api of your choice",id:"add-an-enum-of-the-api-of-your-choice",level:2},{value:"Add a static boolean variable in SCore.java",id:"add-a-static-boolean-variable-in-scorejava",level:2},{value:"Add a method call in SCore.java loadDependency() method",id:"add-a-method-call-in-scorejava-loaddependency-method",level:2},{value:"Use the static variable in your logic",id:"use-the-static-variable-in-your-logic",level:2}];function l(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dependency-management",children:"Dependency Management"})}),"\n",(0,t.jsx)(n.h2,{id:"add-an-enum-of-the-api-of-your-choice",children:"Add an enum of the api of your choice"}),"\n",(0,t.jsxs)(n.p,{children:["If you wish to add api from other plugins, first you have to add a line in\r\nDependency.java under the package ",(0,t.jsx)(n.code,{children:"com.ssomar.score.usedapi"})," like:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'    WORLD_GUARD("WorldGuard"),\n'})}),"\n",(0,t.jsxs)(n.p,{children:["inside the ",(0,t.jsx)(n.code,{children:"Dependency"})," enum. Check the class file Dependency.java to look\r\nat other samples."]}),"\n",(0,t.jsx)(n.p,{children:"Make sure that the string you provide is the id of the plugin when it loads."}),"\n",(0,t.jsx)(n.h2,{id:"add-a-static-boolean-variable-in-scorejava",children:"Add a static boolean variable in SCore.java"}),"\n",(0,t.jsxs)(n.p,{children:["Then in SCore.java under the package ",(0,t.jsx)(n.code,{children:"com.ssomar.score"}),", add a static boolean like:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public static boolean hasWorldGuard = false;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"add-a-method-call-in-scorejava-loaddependency-method",children:"Add a method call in SCore.java loadDependency() method"}),"\n",(0,t.jsxs)(n.p,{children:["Reference your newly created boolean variable inside the ",(0,t.jsx)(n.code,{children:"loadDependency()"})," method\r\nand write it like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"hasWorldGuard = Dependency.WORLD_GUARD.hookSoftDependency();\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Basically ",(0,t.jsx)(n.code,{children:"<api_variable> = Dependency.<api_enum>.hookSoftDependency();"}),(0,t.jsx)(n.br,{}),"\n","Check the ",(0,t.jsx)(n.code,{children:"loadDependency()"})," method's code for more examples."]}),"\n",(0,t.jsx)(n.h2,{id:"use-the-static-variable-in-your-logic",children:"Use the static variable in your logic"}),"\n",(0,t.jsx)(n.p,{children:"Now that you have your chosen api implemented as a soft dependency, you can\r\nnow use it to integrate it to your logic like:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"    if (getCondition().getValue(request.getSp())) {\r\n        Player player = request.getPlayer();\r\n        if (SCore.hasTowny) {\r\n            if (!TownyToolAPI.playerIsInHisTown(player, player.getLocation())) {\r\n                runInvalidCondition(request);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);