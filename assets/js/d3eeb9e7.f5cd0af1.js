"use strict";(self.webpackChunkscore_documentation=self.webpackChunkscore_documentation||[]).push([[537],{6553:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"custom_commands/entity_conditions","title":"Adding Player Commands","description":"Sample Player Command : AddItemlore.java","source":"@site/docs/custom_commands/entity_conditions.md","sourceDirName":"custom_commands","slug":"/custom_commands/entity_conditions","permalink":"/SCore-Documentation/docs/custom_commands/entity_conditions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/custom_commands/entity_conditions.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Custom Commands","permalink":"/SCore-Documentation/docs/category/custom-commands"}}');var a=t(4848),o=t(8453);const r={sidebar_position:1},i="Adding Player Commands",d={},m=[{value:"Go to <code>com.ssomar.score.commands.runnable.player.commands</code>",id:"go-to-comssomarscorecommandsrunnableplayercommands",level:2},{value:"Then extend it to PlayerCommands",id:"then-extend-it-to-playercommands",level:2},{value:"Setup arguments for your custom command",id:"setup-arguments-for-your-custom-command",level:2},{value:"Setup the custom command&#39;s name in the editor",id:"setup-the-custom-commands-name-in-the-editor",level:3},{value:"Write the guide for using the command",id:"write-the-guide-for-using-the-command",level:3},{value:"Add other required method interfaces",id:"add-other-required-method-interfaces",level:3},{value:"Add the code that will be executed when you run the custom command",id:"add-the-code-that-will-be-executed-when-you-run-the-custom-command",level:3},{value:"Add an instance of your custom command at PlayerCommandManager.java",id:"add-an-instance-of-your-custom-command-at-playercommandmanagerjava",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"adding-player-commands",children:"Adding Player Commands"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Sample Player Command : AddItemlore.java"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'\npublic class AddItemlore extends PlayerCommand {\n\n    public AddItemlore() {\n        CommandSetting slot = new CommandSetting("slot", 0, Integer.class, 0);\n        slot.setSlot(true);\n        CommandSetting text = new CommandSetting("text", 1, String.class, "New lore");\n        text.setAcceptUnderScoreForLongText(true);\n        CommandSetting insertIndex = new CommandSetting("insertIndex", 2, Integer.class, -1);\n        List<CommandSetting> settings = getSettings();\n        settings.add(slot);\n        settings.add(text);\n        settings.add(insertIndex);\n        setNewSettingsMode(true);\n    }\n\n    @Override\n    public void run(Player p, Player receiver, SCommandToExec sCommandToExec) {\n        ItemStack item;\n        ItemMeta itemmeta;\n        ArrayList<String> list;\n\n        int slot = (int) sCommandToExec.getSettingValue("slot");\n        int insertIndex = (int) sCommandToExec.getSettingValue("insertIndex");\n        String text = (String) sCommandToExec.getSettingValue("text");\n\n        List<String> args = sCommandToExec.getOtherArgs();\n        StringBuilder message = new StringBuilder(text);\n        message.append(" ");\n        for (String s : args) {\n            //SsomarDev.testMsg("cmdarg> "+s);\n            message.append(s).append(" ");\n        }\n        message = new StringBuilder(message.substring(0, message.length() - 1));\n\n        if (slot == -1) item = receiver.getInventory().getItemInMainHand();\n        else item = receiver.getInventory().getItem(slot);\n\n        if (item == null || item.getType() == Material.AIR) return;\n        if(!item.hasItemMeta()){\n            item.setItemMeta(new ItemStack(item.getType()).getItemMeta());\n        }\n\n        itemmeta = item.getItemMeta();\n\n        list = (ArrayList<String>) itemmeta.getLore();\n        if(list == null) list = new ArrayList<>();\n        if(!message.toString().isEmpty()) {\n            if (insertIndex == -1) {\n                list.add(StringConverter.coloredString(message.toString()));\n            } else {\n                list.add(insertIndex, StringConverter.coloredString(message.toString()));\n            }\n        }\n        itemmeta.setLore(list);\n        item.setItemMeta(itemmeta);\n    }\n\n    @Override\n    public List<String> getNames() {\n        List<String> names = new ArrayList<>();\n        names.add("ADD_ITEM_LORE");\n        names.add("ADD_LORE");\n        names.add("ADDLORE");\n        return names;\n    }\n\n    @Override\n    public String getTemplate() {\n        return "ADD_ITEM_LORE slot:-1 text:My_new_lore_line insertIndex:0";\n    }\n\n    @Override\n    public ChatColor getColor() {\n        return null;\n    }\n\n    @Override\n    public ChatColor getExtraColor() {\n        return null;\n    }\n}\n'})})]}),"\n",(0,a.jsxs)(n.h2,{id:"go-to-comssomarscorecommandsrunnableplayercommands",children:["Go to ",(0,a.jsx)(n.code,{children:"com.ssomar.score.commands.runnable.player.commands"})]}),"\n",(0,a.jsx)(n.p,{children:"Then create the class file of your custom command"}),"\n",(0,a.jsx)(n.h2,{id:"then-extend-it-to-playercommands",children:"Then extend it to PlayerCommands"}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class TestDev extends PlayerCommand {}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"setup-arguments-for-your-custom-command",children:"Setup arguments for your custom command"}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'CommandSetting attribute = new CommandSetting("attribute", 0, String.class, "SCALE");\nCommandSetting amount = new CommandSetting("amount", 1, Double.class, 1);\nCommandSetting operation = new CommandSetting("operation", 2, String.class, "ADD_NUMBER");\nCommandSetting timeinticks = new CommandSetting("timeinticks", 3, Long.class, 20);\nList<CommandSetting> settings = getSettings();\nsettings.add(attribute);\nsettings.add(amount);\nsettings.add(operation);\nsettings.add(timeinticks);\nsetNewSettingsMode(true);\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Properties of ",(0,a.jsx)(n.code,{children:"CommandSettings()"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["First argument is the tag's name. Its used like this in practice:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"ADD_TEMPORARY_ATTRIBUTE attribute:ATTACK_DAMAGE"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Second argument is for the old system used by SCore to support old formats and to let the plugin know which argument to assign it to based on index"}),"\n",(0,a.jsxs)(n.li,{children:["Third argument is the expected datatype the argument will transform into. Usually when you type things in chat, it's default is ",(0,a.jsx)(n.code,{children:"String"})," so in a way, you're adding strict typing to your command arguments."]}),"\n",(0,a.jsx)(n.li,{children:"The fourth argument is the supposed default value if the user fails to provide a value to a command argument."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'CommandSetting slot = new CommandSetting("slot", 0, Integer.class, 0);\nslot.setSlot(true);\nCommandSetting text = new CommandSetting("text", 1, String.class, "New lore");\ntext.setAcceptUnderScoreForLongText(true);\nCommandSetting insertIndex = new CommandSetting("insertIndex", 2, Integer.class, -1);\nList<CommandSetting> settings = getSettings();\nsettings.add(slot);\nsettings.add(text);\nsettings.add(insertIndex);\nsetNewSettingsMode(true);\n'})}),"\n",(0,a.jsx)(n.h3,{id:"setup-the-custom-commands-name-in-the-editor",children:"Setup the custom command's name in the editor"}),"\n",(0,a.jsx)(n.p,{children:"Type one or more names the plugin will look for so it would know what words to look for to run your custom command"}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Override\npublic List<String> getNames() {\n    List<String> names = new ArrayList<>();\n    names.add("ADD_TEMPORARY_ATTRIBUTE");\n    return names;\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"write-the-guide-for-using-the-command",children:"Write the guide for using the command"}),"\n",(0,a.jsx)(n.p,{children:"This will be the text that will replace the chat of plugin users when they\npress the text of the custom command in the commands editor"}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Override\npublic String getTemplate() {\n    return "ADD_TEMPORARY_ATTRIBUTE {attribute} {amount} {operation} {time in ticks}";\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"add-other-required-method-interfaces",children:"Add other required method interfaces"}),"\n",(0,a.jsx)(n.p,{children:"As of this writing, I do not know what these do. Only Ssomar knows."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"@Override\npublic ChatColor getColor() {\n    return null;\n}\n\n@Override\npublic ChatColor getExtraColor() {\n    return null;\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"add-the-code-that-will-be-executed-when-you-run-the-custom-command",children:"Add the code that will be executed when you run the custom command"}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"\n    @Override\n    public void run(@Nullable Player launcher, Player receiver, SCommandToExec sCommandToExec) {\n        launcher.sendMessage(launcher.getName());\n        launcher.sendMessage(receiver.getName());\n        launcher.sendMessage(sCommandToExec.toString());\n        \n    }\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"launcher"})," = The player who executed the custom command via ei item or the ",(0,a.jsx)(n.code,{children:"player:"})," specified when running ",(0,a.jsx)(n.code,{children:"/score run-player-command"}),(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"receiver"}),' = The player who is the "victim" of the custom command. Usually is used in commands such as DAMAGE in targetCommands',(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"sCommandToExec"})," = Contains various information such as the values placed in the custom command's arguments",(0,a.jsx)("br",{})]}),"\n"]})}),"\n",(0,a.jsx)(n.h2,{id:"add-an-instance-of-your-custom-command-at-playercommandmanagerjava",children:"Add an instance of your custom command at PlayerCommandManager.java"}),"\n",(0,a.jsxs)(n.p,{children:["Package: ",(0,a.jsx)(n.code,{children:"com.ssomar.score.commands.runnable.player"})]}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public PlayerCommandManager() {\n    List<SCommand> commands = new ArrayList<>();\n    commands.add(new TestDev());\n    commands.add(new AddItemlore());\n    .....\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var s=t(6540);const a={},o=s.createContext(a);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);