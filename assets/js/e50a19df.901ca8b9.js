"use strict";(self.webpackChunkscore_documentation=self.webpackChunkscore_documentation||[]).push([[956],{995:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"score/feature_parent_interface/ListUncoloredStringFeature","title":"ListUncoloredStringFeature","description":"When used, it will provide a list-type chat editor where you can add/edit/remove lines of conditions.","source":"@site/docs/score/feature_parent_interface/ListUncoloredStringFeature.md","sourceDirName":"score/feature_parent_interface","slug":"/score/feature_parent_interface/ListUncoloredStringFeature","permalink":"/SCore-Documentation/docs/score/feature_parent_interface/ListUncoloredStringFeature","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/score/feature_parent_interface/ListUncoloredStringFeature.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"SCore","previous":{"title":"Feature Parent Interface","permalink":"/SCore-Documentation/docs/category/feature-parent-interface"},"next":{"title":"Custom Conditions","permalink":"/SCore-Documentation/docs/category/custom-conditions"}}');var o=r(4848),i=r(8453);const s={sidebar_position:1},a="ListUncoloredStringFeature",c={},u=[{value:"Source Code:",id:"source-code",level:2}];function l(e){const t={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"listuncoloredstringfeature",children:"ListUncoloredStringFeature"})}),"\n",(0,o.jsx)(t.p,{children:"When used, it will provide a list-type chat editor where you can add/edit/remove lines of conditions.\nIt makes sure that the provided string does not have color properties to prevent unwanted complications"}),"\n",(0,o.jsx)("hr",{}),"\n",(0,o.jsxs)(t.p,{children:["Target package: ",(0,o.jsx)(t.code,{children:"com.ssomar.score.features.types.list"})]}),"\n",(0,o.jsx)("hr",{}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["How to access the entries for the condition:",(0,o.jsx)(t.br,{}),"\n",(0,o.jsx)(t.code,{children:"for (String name : getCondition().getValue(request.getSp())) {}"})]})}),"\n",(0,o.jsx)(t.h2,{id:"source-code",children:"Source Code:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'package com.ssomar.score.features.types.list;\n\nimport com.ssomar.score.editor.NewGUIManager;\nimport com.ssomar.score.editor.Suggestion;\nimport com.ssomar.score.features.FeatureParentInterface;\nimport com.ssomar.score.features.FeatureSettingsInterface;\nimport com.ssomar.score.menu.EditorCreator;\nimport com.ssomar.score.utils.placeholders.StringPlaceholder;\nimport com.ssomar.score.utils.strings.StringConverter;\nimport lombok.Getter;\nimport lombok.Setter;\nimport net.md_5.bungee.api.chat.TextComponent;\nimport org.bukkit.entity.Player;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Optional;\n\n@Getter\n@Setter\npublic class ListUncoloredStringFeature extends ListFeatureAbstract<String, ListUncoloredStringFeature> {\n\n    private Optional<List<Suggestion>> suggestions;\n\n    public ListUncoloredStringFeature(FeatureParentInterface parent, List<String> defaultValue, FeatureSettingsInterface featureSettings, Optional<List<Suggestion>> suggestions) {\n        super(parent,"List of Colored Strings", defaultValue,featureSettings);\n        this.suggestions = suggestions;\n        reset();\n    }\n\n    public List<String> loadValues(List<String> entries, List<String> errors) {\n        List<String> uncolored = new ArrayList<>();\n        for (String s : entries) {\n            uncolored.add(StringConverter.decoloredString(s));\n        }\n        return uncolored;\n    }\n\n    @Override\n    public String transfromToString(String value) {\n        return value;\n    }\n\n    @Override\n    public ListUncoloredStringFeature clone(FeatureParentInterface newParent) {\n        ListUncoloredStringFeature clone = new ListUncoloredStringFeature(newParent, getDefaultValue(), getFeatureSettings(), suggestions);\n        clone.setValues(getValues());\n        clone.setBlacklistedValues(getBlacklistedValues());\n        return clone;\n    }\n\n\n    @Override\n    public Optional<String> verifyMessage(String message) {\n        return Optional.empty();\n    }\n\n    @Override\n    public List<TextComponent> getMoreInfo() {\n        return null;\n    }\n\n    @Override\n    public List<Suggestion> getSuggestions() {\n        return suggestions.orElseGet(ArrayList::new);\n    }\n\n    @Override\n    public String getTips() {\n        return "";\n    }\n\n    @Override\n    public void sendBeforeTextEditor(Player playerEditor, NewGUIManager manager) {\n        List<String> beforeMenu = new ArrayList<>();\n        beforeMenu.add("&7\u27a4 Your custom " + getEditorName() + ":");\n\n        HashMap<String, String> suggestions = new HashMap<>();\n\n        EditorCreator editor = new EditorCreator(beforeMenu, (List<String>) manager.currentWriting.get(playerEditor), getEditorName() + ":", true, true, true, true,\n                true, true, false, "", suggestions);\n        editor.generateTheMenuAndSendIt(playerEditor);\n    }\n\n    public List<String> getValue(StringPlaceholder sp){\n        List<String> result = new ArrayList<>();\n        for(String s : this.getValues()) {\n            result.add(sp.replacePlaceholder(s));\n        }\n        return result;\n    }\n}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var n=r(6540);const o={},i=n.createContext(o);function s(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);