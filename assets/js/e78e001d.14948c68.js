"use strict";(self.webpackChunkscore_documentation=self.webpackChunkscore_documentation||[]).push([[4105],{5603:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>s});const c=JSON.parse('{"id":"executableblocks/registered_events/event_blockPlacementEvent/continue_to_place","title":"Placement Method Call (continueToPlace()) For EB","description":"Class File: com.ssomar.executableblocks.events.mechanics.PlaceEBPListener.java","source":"@site/docs/executableblocks/registered_events/event_blockPlacementEvent/continue_to_place.md","sourceDirName":"executableblocks/registered_events/event_blockPlacementEvent","slug":"/executableblocks/registered_events/event_blockPlacementEvent/continue_to_place","permalink":"/SCore-Documentation/docs/executableblocks/registered_events/event_blockPlacementEvent/continue_to_place","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/executableblocks/registered_events/event_blockPlacementEvent/continue_to_place.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"ExecutableBlocks","previous":{"title":"Placement Checks (onBlockPlaceEvent()) For EB","permalink":"/SCore-Documentation/docs/executableblocks/registered_events/event_blockPlacementEvent/placement_checks"},"next":{"title":"Block Breaks","permalink":"/SCore-Documentation/docs/category/block-breaks"}}');var l=n(4848),o=n(8453);const a={sidebar_position:2},i="Placement Method Call (continueToPlace()) For EB",r={},s=[{value:"Create an <code>ExecutableBlock</code> object from the <code>ExecutableBlockObject</code> method argument",id:"create-an-executableblock-object-from-the-executableblockobject-method-argument",level:2},{value:"If config&#39;s whitelisted worlds list is not empty and the placed block&#39;s world is not in the list, cancel the event and return",id:"if-configs-whitelisted-worlds-list-is-not-empty-and-the-placed-blocks-world-is-not-in-the-list-cancel-the-event-and-return",level:3},{value:"Create a <code>PlayerLimit.PlayerLimitResult</code> object",id:"create-a-playerlimitplayerlimitresult-object",level:2},{value:"If the player can&#39;t place more blocks, cancel the event and return",id:"if-the-player-cant-place-more-blocks-cancel-the-event-and-return",level:3},{value:"Create an <code>Optional&lt;ExecutableBlockPlaced&gt;</code> object",id:"create-an-optionalexecutableblockplaced-object",level:2},{value:"If ExecutableBlockPlaced isn&#39;t present, return;",id:"if-executableblockplaced-isnt-present-return",level:3},{value:"Note down the event for activator purposes",id:"note-down-the-event-for-activator-purposes",level:2},{value:"If event is cancelled, remove the ExecutableBlock placed and return",id:"if-event-is-cancelled-remove-the-executableblock-placed-and-return",level:3}];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"placement-method-call-continuetoplace-for-eb",children:"Placement Method Call (continueToPlace()) For EB"})}),"\n",(0,l.jsxs)(t.p,{children:["Class File: ",(0,l.jsx)(t.code,{children:"com.ssomar.executableblocks.events.mechanics.PlaceEBPListener.java"})]}),"\n",(0,l.jsxs)(t.admonition,{type:"info",children:[(0,l.jsxs)(t.mdxAdmonitionTitle,{children:["Method full description: ",(0,l.jsx)(t.code,{children:"public void continueToPlace(ExecutableBlockObject nEBO, BlockPlaceEvent e, Player p, Block b)"})]}),(0,l.jsxs)(t.p,{children:["Only used by the ",(0,l.jsx)(t.code,{children:"onBlockPlaceEvent()"})," method"]})]}),"\n",(0,l.jsxs)(t.h2,{id:"create-an-executableblock-object-from-the-executableblockobject-method-argument",children:["Create an ",(0,l.jsx)(t.code,{children:"ExecutableBlock"})," object from the ",(0,l.jsx)(t.code,{children:"ExecutableBlockObject"})," method argument"]}),"\n",(0,l.jsx)(t.h3,{id:"if-configs-whitelisted-worlds-list-is-not-empty-and-the-placed-blocks-world-is-not-in-the-list-cancel-the-event-and-return",children:"If config's whitelisted worlds list is not empty and the placed block's world is not in the list, cancel the event and return"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["\n",(0,l.jsxs)(t.p,{children:["It refers to the ",(0,l.jsx)(t.code,{children:"whitelistedWorlds: []"})," option in ExecutableBlocks's ",(0,l.jsx)(t.code,{children:"config.yml"})]}),"\n"]}),"\n",(0,l.jsxs)(t.li,{children:["\n",(0,l.jsxs)(t.p,{children:["Send the string written at ",(0,l.jsx)(t.code,{children:"notWhitelistedWorld"})," of EB's locale file as a message towards the player who placed the block."]}),"\n"]}),"\n",(0,l.jsxs)(t.li,{children:["\n",(0,l.jsx)(t.p,{children:"Cancel the event"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(t.h2,{id:"create-a-playerlimitplayerlimitresult-object",children:["Create a ",(0,l.jsx)(t.code,{children:"PlayerLimit.PlayerLimitResult"})," object"]}),"\n",(0,l.jsx)(t.h3,{id:"if-the-player-cant-place-more-blocks-cancel-the-event-and-return",children:"If the player can't place more blocks, cancel the event and return"}),"\n",(0,l.jsx)(t.admonition,{type:"warning",children:(0,l.jsx)(t.p,{children:"As of this writing, the logic that adds up the placement limit tally isn't\r\nwritten down yet"})}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["Send the string written at ",(0,l.jsx)(t.code,{children:"playerLimit"})," of EB's locale file as a message towards the player who placed the block."]}),"\n",(0,l.jsx)(t.li,{children:"Cancel the event"}),"\n"]}),"\n",(0,l.jsxs)(t.h2,{id:"create-an-optionalexecutableblockplaced-object",children:["Create an ",(0,l.jsx)(t.code,{children:"Optional<ExecutableBlockPlaced>"})," object"]}),"\n",(0,l.jsxs)(t.p,{children:["Code line: ",(0,l.jsx)(t.code,{children:"Optional<ExecutableBlockPlaced> eBP = nEBO.createExecutableBlockPlaced(b.getLocation(), false, OverrideMode.KEEP_EXISTING, p, null, new InternalData().setOwnerUUID(p.getUniqueId()));"})]}),"\n",(0,l.jsx)(t.admonition,{type:"warning",children:(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:".createExecutableBlockPlaced()"})," lacks documentation. Please add information when possible"]})}),"\n",(0,l.jsx)(t.h3,{id:"if-executableblockplaced-isnt-present-return",children:"If ExecutableBlockPlaced isn't present, return;"}),"\n",(0,l.jsx)(t.h2,{id:"note-down-the-event-for-activator-purposes",children:"Note down the event for activator purposes"}),"\n",(0,l.jsx)(t.admonition,{type:"warning",children:(0,l.jsx)(t.p,{children:"This needs more documentation since the code isn't direct about it at first glance"})}),"\n",(0,l.jsx)(t.h3,{id:"if-event-is-cancelled-remove-the-executableblock-placed-and-return",children:"If event is cancelled, remove the ExecutableBlock placed and return"})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var c=n(6540);const l={},o=c.createContext(l);function a(e){const t=c.useContext(o);return c.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),c.createElement(o.Provider,{value:t},e.children)}}}]);